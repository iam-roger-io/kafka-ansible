# Rogerio L Santos

---
# PREPARE ALL HOSTS

- hosts: bridge  
  vars_files:
    - vars/settings.yaml

  tasks:    
  - name: disable firewall
    systemd:
      name: firewalld
      state: stopped
      enabled: false
      masked: no   

  - name: Create group "{{ kafka_user }}" 
    group:
      name: "{{ kafka_user }}"
      state: present

  - name: Create user '{{ kafka_user }}'
    user:
      name: "{{ kafka_user }}"
      password: NOT_LOGGING_PASSWORD
      group: "{{ kafka_user }}"

  - name: 'Install unzip'
    yum:
      name: unzip
      state: latest
    become: yes

  - name: 'Install JVM: {{ jvm_package }}'
    yum:
      name: "{{ jvm_package }}" 
      state: latest
    become: yes    
 
  - name: "Create installation folder {{ kafka_bridge_install_package_source_folder }}"
    file:
      path: "{{ kafka_bridge_install_package_host_folder }}"
      state: directory
      mode: 0755
      group: "{{ kafka_bridge_user }}"
      owner: "{{ kafka_bridge_user }}"   

  - name: Copy kafka bridge package to remote server
    copy: src={{kafka_bridge_install_package_source_folder}}/{{ kafka_bridge_install_package_name }} dest={{ kafka_bridge_install_package_host_folder }}
    become: yes    

  - name: Unzip kafka bridge package "{{ kafka_bridge_install_package_host_folder }}/{{ kafka_bridge_install_package_name }}"
    unarchive:
      src: "{{ kafka_bridge_install_package_host_folder }}/{{ kafka_bridge_install_package_name }}"
      dest: "{{ kafka_bridge_install_package_host_folder }}"      
      remote_src: yes
      list_files: yes
    register: unarchived_list

  - name: Create symbolic link {{ kafka_bridge_install_host_symlink }} for {{kafka_bridge_install_package_host_folder}}/{{ unarchived_list.files[0] }}
    file:
      src: "{{kafka_bridge_install_package_host_folder}}/{{ unarchived_list.files[0] }}"
      dest: "{{kafka_bridge_install_host_symlink}}"
      state: link 

  - name: Change user and group for symblink {{ kafka_bridge_install_host_symlink }}
    command: chown -R kafka:kafka {{ kafka_bridge_install_host_symlink }}
    become: true 

  - name: Set KAFKA_BRIDGE_HOME={{ kafka_bridge_install_host_symlink }} in  /home/{{ kafka_bridge_user }}/.bashrc
    lineinfile: 
      dest: /home/{{ kafka_bridge_user }}/.bashrc
      line: "export KAFKA_BRIDGE_HOME={{ kafka_bridge_install_host_symlink }}"    

  - name: Source Bashrc
    action: shell source /home/{{ kafka_bridge_user }}/.bashrc        

# Application.properties settings
  - set_fact: 
      kafka_bootstrap_server: "{{ groups.kafka | join(':{{ kafka_listeners_port }},') }}:{{ kafka_listeners_port }}"

  - name: Set bootstrap servers for kafka-bridge in application.properties
    replace:
      path: "{{ kafka_bridge_install_host_symlink }}/config/application.properties"
      regexp: 'kafka.bootstrap.servers=localhost:9092'
      replace: "kafka.bootstrap.servers={{ kafka_bootstrap_server }}"    

  - name: Set bootstrap servers for kafka-bridge in application.properties
    replace:
      path: "{{ kafka_bridge_install_host_symlink }}/config/application.properties"
      regexp: 'http.port=8080'
      replace: "http.port={{ kafka_bridge_http_port }}"   

  - name: Set bootstrap servers for kafka-bridge in application.properties
    replace:
      path: "{{ kafka_bridge_install_host_symlink }}/config/application.properties"
      regexp: 'http.host=0.0.0.0'
      replace: "http.host={{ kafka_bridge_http_host }}"       

  - name: Set bootstrap servers for kafka-bridge in application.properties
    replace:
      path: "{{ kafka_bridge_install_host_symlink }}/config/application.properties"
      regexp: 'http.cors.enabled'
      replace: "http.host={{ kafka_bridge_http_cors_enabled }}"    

  - name: Set bootstrap servers for kafka-bridge in application.properties
    replace:
      path: "{{ kafka_bridge_install_host_symlink }}/config/application.properties"
      regexp: 'http.cors.allowedOrigins=*'
      replace: "http.host={{ kafka_bridge_http_cors_allowedOrigins}}"          

  - name: Set bootstrap servers for kafka-bridge in application.properties
    replace:
      path: "{{ kafka_bridge_install_host_symlink }}/config/application.properties"
      regexp: 'http.cors.allowedMethods=GET,POST,PUT,DELETE,OPTIONS,PATCH'
      replace: "http.host={{ kafka_bridge_http_cors_allowedMethods}}"         
      

# Service definition      
  - name: Create file kafka-bridge.service
    template:
      src: templates/kafka-bridge.j2
      dest: /etc/systemd/system/kafka-bridge.service      
      mode: 0755

  - name: Force systemd to reread configs (2.4 and above)
    systemd:
      daemon_reload: yes    

  - name: Enable service kafka-bridge.service and ensure it is not masked
    systemd:
      name: kafka-bridge.service
      enabled: yes
      masked: no        

  - name: Start kafka-bridge
    service:
      name: kafka-bridge.service
      state: started      